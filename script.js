const gridElement = document.getElementById("grid");
let mineIndexes = [];
let gameOver = false;

function createGrid() {
  gridElement.innerHTML = '';
  gameOver = false;
  mineIndexes = [];

  const mineCount = parseInt(document.getElementById("mines").value);
  const cells = [];

  // –≠“∑–æ–¥ –∫–∞—Ä–¥–∞–Ω–∏ 25 —è—á–µ–π–∫–∞
  for (let i = 0; i < 25; i++) {
    const cell = document.createElement("div");
    cell.className = "cell";
    cell.dataset.index = i;

    cell.addEventListener("click", () => handleClick(cell));
    gridElement.appendChild(cell);
    cells.push(cell);
  }

  // –ì—É–∑–æ—à—Ç–∞–Ω–∏ –ª–æ–≤—É—à–∫–∞ (–º–∏–Ω–∞)
  while (mineIndexes.length < mineCount) {
    const rand = Math.floor(Math.random() * 25);
    if (!mineIndexes.includes(rand)) {
      mineIndexes.push(rand);
    }
  }
}

function handleClick(cell) {
  if (gameOver || cell.classList.contains("clicked")) return;

  const index = parseInt(cell.dataset.index);

  if (mineIndexes.includes(index)) {
    // –õ–æ–≤—É—à–∫–∞ —ë—Ñ—Ç —à—É–¥!
    cell.classList.add("mine");
    cell.innerHTML = "üí£";
    cell.style.backgroundColor = "red";
    alert("üí• –ë–∞—Ö—Ç –Ω–∞–¥–æ—à—Ç”£! –ú–∏–Ω–∞ –±—É–¥.");
    gameOver = true;

    // –ù–∞–º–æ–∏—à –¥–æ–¥–∞–Ω–∏ –¥–∏–≥–∞—Ä –º–∏–Ω–∞“≥–æ
    document.querySelectorAll(".cell").forEach(c => {
      const idx = parseInt(c.dataset.index);
      if (mineIndexes.includes(idx)) {
        c.innerHTML = "üí£";
        c.style.backgroundColor = "#900";
      }
    });

  } else {
    // “∂–æ–π–∏ –±–µ—Ö–∞—Ç–∞—Ä
    cell.classList.add("clicked");
    cell.innerHTML = "üåü";
  }
}

function startGame() {
  createGrid();
}

function getSignal() {
  // –ò–Ω —Ñ—É–Ω–∫—Å–∏—è “≥–æ–ª–æ –∏—Å—Ç–∏—Ñ–æ–¥–∞–∏ –º–∞—Ö—Å—É—Å –Ω–∞–¥–æ—Ä–∞–¥,
  // –ú–µ—Ç–∞–≤–æ–Ω”£ –æ–Ω—Ä–æ –±–∞—Ä–æ–∏ ‚Äú–ø–µ—à–≥”Ø”£‚Äù —ë —Å–∏–≥–Ω–∞–ª –∏—Å—Ç–∏—Ñ–æ–¥–∞ –±–∞—Ä”£ –±–∞—ä–¥
  alert("üì° –°–∏–≥–Ω–∞–ª: –º–∏–Ω–∞“≥–æ –Ω–∞–≤ –∫–∞—Ä–¥–∞ —à—É–¥–∞–Ω–¥.");
  startGame();
}

// –ë–æ—Ä–∫—É–Ω–∏–∏ –∞–≤–≤–∞–ª
window.onload = createGrid;
